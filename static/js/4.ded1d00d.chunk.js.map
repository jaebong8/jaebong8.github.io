{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","connect","state","reducer","alert열렸니","reducer2","id","useParams","history","useHistory","찾은상품","shoes","find","x","useState","누른탭변경","스위치","arr","localStorage","getItem","JSON","parse","push","Set","setItem","stringify","className","src","width","title","content","price","onClick","재고변경","dispatch","type","payload","name","quan","goBack","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"2OAQIA,EAAKC,IAAOC,IAAV,kDAKFC,EAAKF,IAAOG,GAAV,mEAEQ,SAAAC,GAAK,OAAIA,EAAMC,gBAiF3B,SAASC,EAAWF,GAKlB,OAHAG,qBAAU,WACRH,EAAMI,gCAAM,MAEI,IAAdJ,EAAMK,mBACD,+EACgB,IAAdL,EAAMK,mBACR,+EACgB,IAAdL,EAAMK,mBACR,oFADF,EAUT,SAASC,EAAKN,GACZ,OACE,gDAASA,EAAMO,aAAG,MAcTC,uBAVb,SAAsBC,GAEpB,MAAO,CACHA,MAAQA,EAAMC,QACdC,0BAAWF,EAAMG,YAMVJ,EAhHf,SAAgBR,GACZ,IAAKa,EAAMC,cAAND,GACDE,EAAUC,cACVC,EAAOjB,EAAMkB,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEP,IAAMA,KAEzC,EAAkBQ,mBAAS,GAA3B,mBAAKhB,EAAL,KAASiB,EAAT,KAEA,EAAkBD,oBAAS,GAA3B,mBAAKE,EAAL,KAASnB,EAAT,KAyBA,OAtBFD,qBAAU,WACR,IAAIqB,EAAMC,aAAaC,QAAQ,YAE7BF,EADS,MAAPA,EACI,GAEAG,KAAKC,MAAMJ,IAGfK,KAAKhB,GACTW,EAAM,IAAIM,IAAIN,GACdA,EAAG,YAAOA,GAEVC,aAAaM,QAAQ,UAAWJ,KAAKK,UAAUR,MAG/C,IAQE,sBAAKS,UAAU,YAAf,UACI,cAAC,EAAD,UACE,cAAC,EAAD,CAAIA,UAAW,WAAf,sBAEJ,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKC,IAAG,mDAA+CjB,EAAKJ,GAAI,EAAxD,QAAiEsB,MAAM,WAEjF,sBAAKF,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBhB,EAAKmB,QAC3B,4BAAInB,EAAKoB,UACT,8BAAIpB,EAAKqB,MAAT,YAEA,cAAChC,EAAD,CAAM,eAAIN,EAAMO,eAEhB,wBAAQ0B,UAAU,iBAAiBM,QAAS,WAC1CvC,EAAMwC,yBAAK,CAAC,EAAE,EAAE,KAChBxC,EAAMyC,SAAS,CAACC,KAAO,2BAAQC,QAAS,CAAC9B,GAAG,EAAG+B,KAAK3B,EAAKmB,MAAMS,KAAK,KACpE9B,EAAQc,KAAK,UAHf,sCAKA,wBAAQI,UAAU,iBAAiBM,QAAS,WACxCxB,EAAQ+B,UADZ,4CAMJ,eAAC,IAAD,CAAKb,UAAU,OAAOc,QAAQ,OAAOC,iBAAiB,SAAtD,UACE,cAAC,IAAIC,KAAL,UACE,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASZ,QAAS,WAAKnC,GAAM,GAAQkB,EAAM,IAA9D,wCAEF,cAAC,IAAI2B,KAAL,UACC,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASZ,QAAS,WAAKnC,GAAM,GAAQkB,EAAM,IAA9D,2CAIH,cAAC,IAAD,CAAe8B,GAAI7B,EAAK8B,WAAW,MAAMC,QAAS,IAAlD,SACE,cAACpD,EAAD,CAAY,qBAAKG,EAAK,iCAASD","file":"static/js/4.ded1d00d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {useHistory , useParams} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.scss'\r\nimport { Navbar,Container,Nav,Carousel,Button} from 'react-bootstrap';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport {connect} from 'react-redux';\r\n\r\nlet 박스 = styled.div`\r\n\r\n    padding: 20px;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n    font-size: 25px;\r\n    color : ${props => props.색상}\r\n`;\r\n\r\n\r\nfunction Detail(props) {\r\n    let {id} = useParams();\r\n    let history = useHistory();\r\n    let 찾은상품 = props.shoes.find(x => x.id == id);\r\n\r\n    let [누른탭,누른탭변경] = useState(0);\r\n\r\n    let [스위치,스위치변경] = useState(false);\r\n\r\n    \r\n  useEffect(function(){\r\n    let arr = localStorage.getItem('watched');\r\n    if (arr == null) {\r\n      arr = [];\r\n    }else {\r\n      arr = JSON.parse(arr);\r\n    }\r\n    \r\n    arr.push(id);\r\n    arr = new Set(arr);\r\n    arr = [...arr];\r\n\r\n    localStorage.setItem('watched', JSON.stringify(arr));\r\n\r\n\r\n  },[]);\r\n    \r\n   \r\n    \r\n    \r\n    \r\n\r\n    return (\r\n      <div className=\"container\">\r\n          <박스>\r\n            <제목 className =\"redcolor\">Detail</제목>\r\n          </박스>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={`https://codingapple1.github.io/shop/shoes${(찾은상품.id)+1}.jpg`} width=\"100%\" />\r\n          </div>\r\n          <div className=\"col-md-6 mt-4\">\r\n            <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n            <p>{찾은상품.content}</p>\r\n            <p>{찾은상품.price}원</p>\r\n            \r\n            <Info 재고={props.재고}/>\r\n\r\n            <button className=\"btn btn-danger\" onClick={()=>{\r\n              props.재고변경([8,9,10])\r\n              props.dispatch({type : '항목추가', payload: {id:0, name:찾은상품.title,quan:1}});\r\n              history.push('/cart')\r\n            }}>주문하기</button> \r\n            <button className=\"btn btn-danger\" onClick={()=>{\r\n                history.goBack();\r\n            }}>뒤로가기</button> \r\n          </div>\r\n        </div>\r\n\r\n        <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n          <Nav.Item>\r\n            <Nav.Link eventKey=\"link-0\" onClick={()=>{스위치변경(false); 누른탭변경(0)}}>상품설명</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n           <Nav.Link eventKey=\"link-1\" onClick={()=>{스위치변경(false); 누른탭변경(1)}}>배송정보</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n\r\n        <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n          <TabContent 누른탭={누른탭} 스위치변경 = {스위치변경}/>    \r\n        </CSSTransition>    \r\n\r\n\r\n  </div> \r\n    )\r\n  }\r\n\r\n  function TabContent(props) {\r\n\r\n    useEffect(()=>{\r\n      props.스위치변경(true);\r\n    })\r\n    if (props.누른탭 === 0) {\r\n      return <div>0번째 내용입니다</div>\r\n    } else if (props.누른탭 === 1) {\r\n      return <div>1번째 내용입니다</div>\r\n    } else if (props.누른탭 === 2) {\r\n      return <div>2번째 내용입니다</div>\r\n    }\r\n    \r\n    \r\n    \r\n  }\r\n\r\n\r\n\r\n  function Info(props){\r\n    return (\r\n      <p>재고 : {props.재고[0]}</p>\r\n    )\r\n  }\r\n\r\n  function state를props화(state){\r\n  \r\n    return {\r\n        state : state.reducer,\r\n        alert열렸니 : state.reducer2\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(state를props화)(Detail)"],"sourceRoot":""}